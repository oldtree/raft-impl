// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raft.proto

package protobuffer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ApplyLogRequest struct {
	CurrentCommitID      int64                `protobuf:"varint,1,opt,name=currentCommitID,proto3" json:"currentCommitID,omitempty"`
	CurrentTermID        int64                `protobuf:"varint,2,opt,name=currentTermID,proto3" json:"currentTermID,omitempty"`
	LogData              []byte               `protobuf:"bytes,3,opt,name=logData,proto3" json:"logData,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ApplyLogRequest) Reset()         { *m = ApplyLogRequest{} }
func (m *ApplyLogRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyLogRequest) ProtoMessage()    {}
func (*ApplyLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_e8ee26b5cadb4aca, []int{0}
}
func (m *ApplyLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyLogRequest.Unmarshal(m, b)
}
func (m *ApplyLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyLogRequest.Marshal(b, m, deterministic)
}
func (dst *ApplyLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyLogRequest.Merge(dst, src)
}
func (m *ApplyLogRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyLogRequest.Size(m)
}
func (m *ApplyLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyLogRequest proto.InternalMessageInfo

func (m *ApplyLogRequest) GetCurrentCommitID() int64 {
	if m != nil {
		return m.CurrentCommitID
	}
	return 0
}

func (m *ApplyLogRequest) GetCurrentTermID() int64 {
	if m != nil {
		return m.CurrentTermID
	}
	return 0
}

func (m *ApplyLogRequest) GetLogData() []byte {
	if m != nil {
		return m.LogData
	}
	return nil
}

func (m *ApplyLogRequest) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type ApplyLogResponse struct {
	CurrentCommitID      int64                `protobuf:"varint,1,opt,name=currentCommitID,proto3" json:"currentCommitID,omitempty"`
	CurrentTermID        int64                `protobuf:"varint,2,opt,name=currentTermID,proto3" json:"currentTermID,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ApplyLogResponse) Reset()         { *m = ApplyLogResponse{} }
func (m *ApplyLogResponse) String() string { return proto.CompactTextString(m) }
func (*ApplyLogResponse) ProtoMessage()    {}
func (*ApplyLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_e8ee26b5cadb4aca, []int{1}
}
func (m *ApplyLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyLogResponse.Unmarshal(m, b)
}
func (m *ApplyLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyLogResponse.Marshal(b, m, deterministic)
}
func (dst *ApplyLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyLogResponse.Merge(dst, src)
}
func (m *ApplyLogResponse) XXX_Size() int {
	return xxx_messageInfo_ApplyLogResponse.Size(m)
}
func (m *ApplyLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyLogResponse proto.InternalMessageInfo

func (m *ApplyLogResponse) GetCurrentCommitID() int64 {
	if m != nil {
		return m.CurrentCommitID
	}
	return 0
}

func (m *ApplyLogResponse) GetCurrentTermID() int64 {
	if m != nil {
		return m.CurrentTermID
	}
	return 0
}

func (m *ApplyLogResponse) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type HeartbeatRequest struct {
	TermIndex            int64                `protobuf:"varint,1,opt,name=termIndex,proto3" json:"termIndex,omitempty"`
	LastTermIndex        int64                `protobuf:"varint,2,opt,name=lastTermIndex,proto3" json:"lastTermIndex,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *HeartbeatRequest) Reset()         { *m = HeartbeatRequest{} }
func (m *HeartbeatRequest) String() string { return proto.CompactTextString(m) }
func (*HeartbeatRequest) ProtoMessage()    {}
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_e8ee26b5cadb4aca, []int{2}
}
func (m *HeartbeatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatRequest.Unmarshal(m, b)
}
func (m *HeartbeatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatRequest.Marshal(b, m, deterministic)
}
func (dst *HeartbeatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatRequest.Merge(dst, src)
}
func (m *HeartbeatRequest) XXX_Size() int {
	return xxx_messageInfo_HeartbeatRequest.Size(m)
}
func (m *HeartbeatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatRequest proto.InternalMessageInfo

func (m *HeartbeatRequest) GetTermIndex() int64 {
	if m != nil {
		return m.TermIndex
	}
	return 0
}

func (m *HeartbeatRequest) GetLastTermIndex() int64 {
	if m != nil {
		return m.LastTermIndex
	}
	return 0
}

func (m *HeartbeatRequest) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type HeartbeatResponse struct {
	TermIndex            int64                `protobuf:"varint,1,opt,name=termIndex,proto3" json:"termIndex,omitempty"`
	LastTermIndex        int64                `protobuf:"varint,2,opt,name=lastTermIndex,proto3" json:"lastTermIndex,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *HeartbeatResponse) Reset()         { *m = HeartbeatResponse{} }
func (m *HeartbeatResponse) String() string { return proto.CompactTextString(m) }
func (*HeartbeatResponse) ProtoMessage()    {}
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_e8ee26b5cadb4aca, []int{3}
}
func (m *HeartbeatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatResponse.Unmarshal(m, b)
}
func (m *HeartbeatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatResponse.Marshal(b, m, deterministic)
}
func (dst *HeartbeatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatResponse.Merge(dst, src)
}
func (m *HeartbeatResponse) XXX_Size() int {
	return xxx_messageInfo_HeartbeatResponse.Size(m)
}
func (m *HeartbeatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatResponse proto.InternalMessageInfo

func (m *HeartbeatResponse) GetTermIndex() int64 {
	if m != nil {
		return m.TermIndex
	}
	return 0
}

func (m *HeartbeatResponse) GetLastTermIndex() int64 {
	if m != nil {
		return m.LastTermIndex
	}
	return 0
}

func (m *HeartbeatResponse) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type VoteRequest struct {
	RequestNodeID        int64    `protobuf:"varint,1,opt,name=RequestNodeID,proto3" json:"RequestNodeID,omitempty"`
	LastCommitID         int64    `protobuf:"varint,2,opt,name=LastCommitID,proto3" json:"LastCommitID,omitempty"`
	LastTerm             int64    `protobuf:"varint,3,opt,name=LastTerm,proto3" json:"LastTerm,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteRequest) Reset()         { *m = VoteRequest{} }
func (m *VoteRequest) String() string { return proto.CompactTextString(m) }
func (*VoteRequest) ProtoMessage()    {}
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_e8ee26b5cadb4aca, []int{4}
}
func (m *VoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteRequest.Unmarshal(m, b)
}
func (m *VoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteRequest.Marshal(b, m, deterministic)
}
func (dst *VoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteRequest.Merge(dst, src)
}
func (m *VoteRequest) XXX_Size() int {
	return xxx_messageInfo_VoteRequest.Size(m)
}
func (m *VoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VoteRequest proto.InternalMessageInfo

func (m *VoteRequest) GetRequestNodeID() int64 {
	if m != nil {
		return m.RequestNodeID
	}
	return 0
}

func (m *VoteRequest) GetLastCommitID() int64 {
	if m != nil {
		return m.LastCommitID
	}
	return 0
}

func (m *VoteRequest) GetLastTerm() int64 {
	if m != nil {
		return m.LastTerm
	}
	return 0
}

type VoteResponse struct {
	ResponseNodeID       int64    `protobuf:"varint,1,opt,name=ResponseNodeID,proto3" json:"ResponseNodeID,omitempty"`
	VoteState            int64    `protobuf:"varint,2,opt,name=VoteState,proto3" json:"VoteState,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteResponse) Reset()         { *m = VoteResponse{} }
func (m *VoteResponse) String() string { return proto.CompactTextString(m) }
func (*VoteResponse) ProtoMessage()    {}
func (*VoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_e8ee26b5cadb4aca, []int{5}
}
func (m *VoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteResponse.Unmarshal(m, b)
}
func (m *VoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteResponse.Marshal(b, m, deterministic)
}
func (dst *VoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteResponse.Merge(dst, src)
}
func (m *VoteResponse) XXX_Size() int {
	return xxx_messageInfo_VoteResponse.Size(m)
}
func (m *VoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VoteResponse proto.InternalMessageInfo

func (m *VoteResponse) GetResponseNodeID() int64 {
	if m != nil {
		return m.ResponseNodeID
	}
	return 0
}

func (m *VoteResponse) GetVoteState() int64 {
	if m != nil {
		return m.VoteState
	}
	return 0
}

type SnapshotRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnapshotRequest) Reset()         { *m = SnapshotRequest{} }
func (m *SnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*SnapshotRequest) ProtoMessage()    {}
func (*SnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_e8ee26b5cadb4aca, []int{6}
}
func (m *SnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotRequest.Unmarshal(m, b)
}
func (m *SnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotRequest.Marshal(b, m, deterministic)
}
func (dst *SnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotRequest.Merge(dst, src)
}
func (m *SnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_SnapshotRequest.Size(m)
}
func (m *SnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotRequest proto.InternalMessageInfo

type SnapshotResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnapshotResponse) Reset()         { *m = SnapshotResponse{} }
func (m *SnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*SnapshotResponse) ProtoMessage()    {}
func (*SnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_e8ee26b5cadb4aca, []int{7}
}
func (m *SnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotResponse.Unmarshal(m, b)
}
func (m *SnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotResponse.Marshal(b, m, deterministic)
}
func (dst *SnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotResponse.Merge(dst, src)
}
func (m *SnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_SnapshotResponse.Size(m)
}
func (m *SnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ApplyLogRequest)(nil), "protobuffer.ApplyLogRequest")
	proto.RegisterType((*ApplyLogResponse)(nil), "protobuffer.ApplyLogResponse")
	proto.RegisterType((*HeartbeatRequest)(nil), "protobuffer.HeartbeatRequest")
	proto.RegisterType((*HeartbeatResponse)(nil), "protobuffer.HeartbeatResponse")
	proto.RegisterType((*VoteRequest)(nil), "protobuffer.VoteRequest")
	proto.RegisterType((*VoteResponse)(nil), "protobuffer.VoteResponse")
	proto.RegisterType((*SnapshotRequest)(nil), "protobuffer.SnapshotRequest")
	proto.RegisterType((*SnapshotResponse)(nil), "protobuffer.SnapshotResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogServiceClient is the client API for LogService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogServiceClient interface {
	ApplyLog(ctx context.Context, in *ApplyLogRequest, opts ...grpc.CallOption) (*ApplyLogResponse, error)
	RequestSnapshot(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*SnapshotResponse, error)
	RequestVote(ctx context.Context, in *VoteRequest, opts ...grpc.CallOption) (*VoteResponse, error)
	Heartbeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (*HeartbeatResponse, error)
}

type logServiceClient struct {
	cc *grpc.ClientConn
}

func NewLogServiceClient(cc *grpc.ClientConn) LogServiceClient {
	return &logServiceClient{cc}
}

func (c *logServiceClient) ApplyLog(ctx context.Context, in *ApplyLogRequest, opts ...grpc.CallOption) (*ApplyLogResponse, error) {
	out := new(ApplyLogResponse)
	err := c.cc.Invoke(ctx, "/protobuffer.LogService/ApplyLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logServiceClient) RequestSnapshot(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*SnapshotResponse, error) {
	out := new(SnapshotResponse)
	err := c.cc.Invoke(ctx, "/protobuffer.LogService/RequestSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logServiceClient) RequestVote(ctx context.Context, in *VoteRequest, opts ...grpc.CallOption) (*VoteResponse, error) {
	out := new(VoteResponse)
	err := c.cc.Invoke(ctx, "/protobuffer.LogService/RequestVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logServiceClient) Heartbeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (*HeartbeatResponse, error) {
	out := new(HeartbeatResponse)
	err := c.cc.Invoke(ctx, "/protobuffer.LogService/heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogServiceServer is the server API for LogService service.
type LogServiceServer interface {
	ApplyLog(context.Context, *ApplyLogRequest) (*ApplyLogResponse, error)
	RequestSnapshot(context.Context, *SnapshotRequest) (*SnapshotResponse, error)
	RequestVote(context.Context, *VoteRequest) (*VoteResponse, error)
	Heartbeat(context.Context, *HeartbeatRequest) (*HeartbeatResponse, error)
}

func RegisterLogServiceServer(s *grpc.Server, srv LogServiceServer) {
	s.RegisterService(&_LogService_serviceDesc, srv)
}

func _LogService_ApplyLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServiceServer).ApplyLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuffer.LogService/ApplyLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServiceServer).ApplyLog(ctx, req.(*ApplyLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogService_RequestSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServiceServer).RequestSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuffer.LogService/RequestSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServiceServer).RequestSnapshot(ctx, req.(*SnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogService_RequestVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServiceServer).RequestVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuffer.LogService/RequestVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServiceServer).RequestVote(ctx, req.(*VoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogService_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartbeatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServiceServer).Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuffer.LogService/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServiceServer).Heartbeat(ctx, req.(*HeartbeatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuffer.LogService",
	HandlerType: (*LogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ApplyLog",
			Handler:    _LogService_ApplyLog_Handler,
		},
		{
			MethodName: "RequestSnapshot",
			Handler:    _LogService_RequestSnapshot_Handler,
		},
		{
			MethodName: "RequestVote",
			Handler:    _LogService_RequestVote_Handler,
		},
		{
			MethodName: "heartbeat",
			Handler:    _LogService_Heartbeat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "raft.proto",
}

func init() { proto.RegisterFile("raft.proto", fileDescriptor_raft_e8ee26b5cadb4aca) }

var fileDescriptor_raft_e8ee26b5cadb4aca = []byte{
	// 436 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x93, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0xe5, 0x05, 0xc1, 0xfa, 0xd2, 0x91, 0xce, 0xa7, 0x10, 0x0d, 0xa8, 0xa2, 0x09, 0xe5,
	0x94, 0x49, 0xe3, 0xc2, 0x15, 0xa8, 0x04, 0x43, 0xd1, 0x0e, 0x69, 0xc5, 0xdd, 0xdd, 0x5e, 0xd3,
	0x4a, 0x49, 0x1c, 0x6c, 0x17, 0xc1, 0xb7, 0x80, 0x3b, 0x5f, 0xa3, 0xdf, 0x0f, 0x25, 0xb1, 0x9b,
	0xda, 0xa2, 0x07, 0x04, 0xd2, 0x4e, 0xb1, 0xff, 0xef, 0x9f, 0xf7, 0x7e, 0x7e, 0xcf, 0x06, 0x10,
	0x6c, 0xa5, 0xd2, 0x46, 0x70, 0xc5, 0xa9, 0xdf, 0x7d, 0x96, 0xdb, 0xd5, 0x0a, 0x45, 0xf4, 0xb2,
	0xe0, 0xbc, 0x28, 0xf1, 0xca, 0x68, 0x57, 0x6a, 0x53, 0xa1, 0x54, 0xac, 0x6a, 0x7a, 0x77, 0xbc,
	0x23, 0x10, 0xbc, 0x6d, 0x9a, 0xf2, 0x7b, 0xc6, 0x8b, 0x1c, 0xbf, 0x6c, 0x51, 0x2a, 0x9a, 0x40,
	0x70, 0xb7, 0x15, 0x02, 0x6b, 0xf5, 0x9e, 0x57, 0xd5, 0x46, 0xdd, 0xcc, 0x42, 0x32, 0x25, 0x89,
	0x97, 0xbb, 0x32, 0xbd, 0x84, 0x33, 0x2d, 0x2d, 0x50, 0x54, 0x37, 0xb3, 0xf0, 0xa4, 0xf3, 0xd9,
	0x22, 0x0d, 0xe1, 0x49, 0xc9, 0x8b, 0x19, 0x53, 0x2c, 0xf4, 0xa6, 0x24, 0x19, 0xe7, 0x66, 0x4b,
	0xdf, 0xc0, 0x68, 0x0f, 0x14, 0x3e, 0x9a, 0x92, 0xc4, 0xbf, 0x8e, 0xd2, 0x1e, 0x39, 0x35, 0xc8,
	0xe9, 0xc2, 0x38, 0xf2, 0xc1, 0x1c, 0xff, 0x22, 0x30, 0x19, 0xb8, 0x65, 0xc3, 0x6b, 0x89, 0xff,
	0x1d, 0xdc, 0xc2, 0xf3, 0xfe, 0x06, 0xef, 0x07, 0x81, 0xc9, 0x47, 0x64, 0x42, 0x2d, 0x91, 0x29,
	0xd3, 0xd7, 0x0b, 0x18, 0xa9, 0x36, 0x71, 0x7d, 0x8f, 0xdf, 0x34, 0xd8, 0x20, 0xb4, 0x48, 0x25,
	0x93, 0x7d, 0xe9, 0xce, 0xa1, 0x91, 0x2c, 0xf1, 0x1f, 0x90, 0x7e, 0x12, 0x38, 0x3f, 0x40, 0xd2,
	0x2d, 0x7b, 0x58, 0x26, 0x09, 0xfe, 0x67, 0xae, 0xd0, 0x34, 0xe8, 0x12, 0xce, 0xf4, 0xf2, 0x96,
	0xdf, 0xe3, 0x7e, 0x7a, 0xb6, 0x48, 0x63, 0x18, 0x67, 0x4c, 0x0e, 0x23, 0xee, 0x99, 0x2c, 0x8d,
	0x46, 0x70, 0x9a, 0x69, 0xc6, 0x8e, 0xc8, 0xcb, 0xf7, 0xfb, 0x78, 0x01, 0xe3, 0xbe, 0xa8, 0x6e,
	0xc1, 0x2b, 0x78, 0x6a, 0xd6, 0x56, 0x59, 0x47, 0x6d, 0x5b, 0xd5, 0xfe, 0x37, 0x57, 0x4c, 0xa1,
	0x2e, 0x3a, 0x08, 0xf1, 0x39, 0x04, 0xf3, 0x9a, 0x35, 0x72, 0xcd, 0xcd, 0xbc, 0x63, 0x0a, 0x93,
	0x41, 0xea, 0x53, 0x5d, 0xef, 0x4e, 0x00, 0x32, 0x5e, 0xcc, 0x51, 0x7c, 0xdd, 0xdc, 0x21, 0xfd,
	0x00, 0xa7, 0xe6, 0x16, 0xd3, 0x8b, 0xf4, 0xe0, 0xe5, 0xa6, 0xce, 0xa3, 0x8c, 0x9e, 0x1f, 0x89,
	0xea, 0x43, 0xdc, 0x42, 0xa0, 0x9d, 0xa6, 0xa4, 0x93, 0xcf, 0x81, 0x73, 0xf2, 0xb9, 0x9c, 0xf4,
	0x1d, 0xf8, 0xda, 0xd9, 0x1e, 0x91, 0x86, 0x96, 0xfb, 0x60, 0x66, 0xd1, 0xb3, 0x3f, 0x44, 0x74,
	0x8e, 0x4f, 0x30, 0x5a, 0x9b, 0x0b, 0x47, 0xed, 0x7a, 0xee, 0xdb, 0x88, 0x5e, 0x1c, 0x0b, 0xf7,
	0xb9, 0x96, 0x8f, 0xbb, 0xf0, 0xeb, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x51, 0x77, 0x3e, 0x70,
	0xea, 0x04, 0x00, 0x00,
}
